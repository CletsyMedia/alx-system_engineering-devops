#!/usr/bin/env bash

# This script displays information about subdomains of a given domain

# Check if the required arguments are provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <domain> [subdomain]"
    exit 1
fi

# Function to display information for a specific subdomain
get_subdomain_info() {
    local domain="$1"
    local subdomain="$2"
    local result
    result="$(dig +noall +answer "$subdomain.$domain")"
    local record_type
    record_type="$(echo "$result" | awk '{print $4}')"
    local destination
    destination="$(echo "$result" | awk '{print $5}')"
    echo "The subdomain $subdomain is a $record_type record and points to $destination"
}

# Function to display information for default subdomains
get_default_subdomains_info() {
    local domain="$1"
    local subdomains=("www" "lb-01" "web-01" "web-02")
    for subdomain in "${subdomains[@]}"; do
        get_subdomain_info "$domain" "$subdomain"
    done
}

# Check if only domain is provided
if [ $# -eq 1 ]; then
    get_default_subdomains_info "$1"
    exit 0
fi

# Check if both domain and subdomain are provided
if [ $# -eq 2 ]; then
    get_subdomain_info "$1" "$2"
    exit 0
fi

# If invalid number of arguments provided
echo "Usage: $0 <domain> [subdomain]"
exit 1
